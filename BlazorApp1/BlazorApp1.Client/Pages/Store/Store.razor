@page "/store/add"
@page "/store/edit/{id:int}"
@using BlazorApp1.Client.Helpers
@using BlazorApp.ViewModel
@inject NavigationManager NavigationManager
@inject IStoreService _storeService
@inject BlazorSpinner.SpinnerService _spinnerService

<PageTitle>Store</PageTitle>

<h1>@Title Store</h1>

<EditForm Model="store" OnValidSubmit="SaveStore" FormName="storeAdd">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="Name" class="form-label">Store Name</label>
        <div class="col-sm-10">
            <InputText class="form-control" id="catname" @bind-Value="store.Name" />
            <ValidationMessage For="@(() => store.Name)" />
        </div>
    </div>
    <div class="mb-3">
        <label for="Description" class="form-label">Description</label>
        <div class="col-sm-10">
            <InputText class="form-control" id="catdesc" @bind-Value="store.Description" />
        </div>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <a class="btn btn-danger" tabindex="-1" role="button" aria-disabled="true" href="store">Back To Store List</a>
    </div>
</EditForm>

@code {
    [Parameter]
    public int id { get; set; }
    protected string Title = "Add";
    [SupplyParameterFromForm]
    protected StoreModel store { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _spinnerService.Show();
        store ??= new();
        if (id != 0)
        {
            Title = "Edit";
            store = await _storeService.Get(id);
        }

        _spinnerService.Hide();
    }

    protected async Task SaveStore()
    {
        _spinnerService.Show();
        int result = 0;
        if (id > 0)
        {
            result = await _storeService.Update(store);
        }
        else
        {
            result = await _storeService.Create(store);
        }

        if (result > 0)
        {
            NavigationManager.NavigateTo("store");
        }

        _spinnerService.Hide();
    }

    public void Cancel()
    {
        NavigationManager.NavigateTo("/store");
    }
}
